[gd_scene load_steps=16 format=3 uid="uid://bw7b2jex6oyxp"]

[ext_resource type="Texture2D" uid="uid://ihapw5mwevxc" path="res://dat/spr/scientistBack2Walking1.png" id="1_5h0n1"]
[ext_resource type="Texture2D" uid="uid://ce3ygehn0dc1n" path="res://dat/spr/scientistBack2Walking2.png" id="2_k07ph"]
[ext_resource type="Texture2D" uid="uid://d2cf87b7anlrg" path="res://dat/spr/scientistBackWalking1.png" id="3_l7tgn"]
[ext_resource type="Texture2D" uid="uid://bcl2wh1533ljr" path="res://dat/spr/scientistBackWalking2.png" id="4_g6sc7"]
[ext_resource type="Texture2D" uid="uid://cvyhow47nkh8c" path="res://dat/spr/scientistFront2Walking1.png" id="5_05adt"]
[ext_resource type="Texture2D" uid="uid://lxopbotlxb75" path="res://dat/spr/scientistSide2.png" id="5_qddfl"]
[ext_resource type="Texture2D" uid="uid://0842xs20ibv0" path="res://dat/spr/scientistFront2Walking2.png" id="6_e6rpb"]
[ext_resource type="Texture2D" uid="uid://darj50ddid0fl" path="res://dat/spr/scientistSide.png" id="6_gt66s"]
[ext_resource type="Texture2D" uid="uid://doiutc1u21cjd" path="res://dat/spr/hands.png" id="7_0xgll"]
[ext_resource type="Texture2D" uid="uid://l68r536y2joi" path="res://dat/spr/scientistFrontWalking2.png" id="7_b5xxf"]
[ext_resource type="Texture2D" uid="uid://ctllx5xlndw64" path="res://dat/spr/scientistFrontWalking1.png" id="8_x7cq5"]

[sub_resource type="GDScript" id="GDScript_2d473"]
script/source = "extends CharacterBody2D

const PROJECTILE := preload('res://scn/projectile.tscn')
const SPEED = 300.0

var elements := []

var health := 100

var sped_up  := false
var shooting := false

@onready var spr         := $%Sprite
@onready var hand        := $%Hand
@onready var hand_spr    := $%Hand/Sprite
@onready var speed_timer := $%SpeedUpTimer
@onready var shoot_timer := $%ShootTimer

func _ready() -> void:
	spr.play('front-left')

func _physics_process(delta: float) -> void:
	var direction := Input.get_vector('move-left', 'move-right', 'move-up', 'move-down')
	var angle     := rad_to_deg(get_angle_to(get_global_mouse_position()))
	
	if direction == Vector2.ZERO:
		spr.stop()
	if direction.y > 0:
		if direction.x < 0:
			spr.play('front-left')
		else:
			spr.play('front-right')
		hand.z_index = 0
	elif direction.y < 0:
		if direction.x < 0:
			spr.play('back-left')
		else:
			spr.play('back-right')
		hand.z_index = -1
	elif direction.x > 0:
		spr.play('right')
		hand.z_index = 0
	elif direction.x < 0:
		spr.play('left')
		hand.z_index = 0
	
	hand_spr.flip_v = angle > 90 or angle < -90
	
	if sped_up:
		velocity = direction * SPEED * 1.5
	else:
		velocity = direction * SPEED
	move_and_slide()
	
	hand.look_at(get_global_mouse_position())

func _unhandled_input(event: InputEvent) -> void:
	if event.is_action_released('shoot'):
		_shoot()

func _shoot() -> void:
	if _can_shoot():
		if current_elements_are([2, 3]):
			change_health(100)
			print('Heal up')
		elif current_elements_are([1, 4]):
			speed_up()
		elif current_elements_are([3, 4]):
			machine_gun()
		elif current_elements_are([0, 1]):
			pass
		elif current_elements_are([1, 2]):
			pass
		else:
			var projectile := make_projectile()
			
			if current_elements_are([0, 3]):
				projectile.piercing = true

func make_projectile() -> Node2D:
	var direction  := (get_global_mouse_position() - global_position).normalized()
	var projectile := PROJECTILE.instantiate()
	
	projectile.direction       = direction
	projectile.global_position = global_position
	projectile.elements = elements.slice(0, 2)
	$/root/Main.add_child(projectile)
	elements = elements.slice(2)
	
	return projectile

func _can_shoot() -> bool:
	return elements.size() > 1

func speed_up() -> void:
	if not sped_up:
		sped_up = true
		speed_timer.start(5)
		await speed_timer.timeout
		sped_up = false

func machine_gun() -> void:
	shooting = true
	
	while true:
		make_projectile()
		shoot_timer.start(0.1)
		await shoot_timer.timeout
	
	shooting = false

func current_elements_are(lst: Array[int]) -> bool:
	return elements.slice(0, 2).has(lst[0]) and elements.slice(0, 2).has(lst[1])

func change_health(amt: int) -> void:
	health = clamp(health + amt, 0, 100)

func can_pickup(elt: int) -> bool:
	return elements.is_empty() or elements.size() < 10 or elements[0] != elt

func pickup(elt: int) -> void:
	elements.push_front(elt)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6q5oe"]
size = Vector2(34.8629, 52)

[sub_resource type="SpriteFrames" id="SpriteFrames_jyxiq"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_5h0n1")
}, {
"duration": 1.0,
"texture": ExtResource("2_k07ph")
}],
"loop": true,
"name": &"back-left",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("3_l7tgn")
}, {
"duration": 1.0,
"texture": ExtResource("4_g6sc7")
}],
"loop": true,
"name": &"back-right",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_05adt")
}, {
"duration": 1.0,
"texture": ExtResource("6_e6rpb")
}],
"loop": true,
"name": &"front-left",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("7_b5xxf")
}, {
"duration": 1.0,
"texture": ExtResource("8_x7cq5")
}],
"loop": true,
"name": &"front-right",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_qddfl")
}],
"loop": true,
"name": &"left",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_gt66s")
}],
"loop": true,
"name": &"right",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ab18d"]
size = Vector2(48, 64)

[node name="Player" type="CharacterBody2D"]
collision_mask = 273
script = SubResource("GDScript_2d473")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -2)
scale = Vector2(1.14735, 1)
shape = SubResource("RectangleShape2D_6q5oe")

[node name="Sprite" type="AnimatedSprite2D" parent="."]
unique_name_in_owner = true
scale = Vector2(2, 2)
sprite_frames = SubResource("SpriteFrames_jyxiq")
animation = &"back-left"

[node name="Hand" type="Node2D" parent="."]
unique_name_in_owner = true

[node name="Sprite" type="Sprite2D" parent="Hand"]
position = Vector2(-8, 0)
scale = Vector2(1.5, 1.5)
texture = ExtResource("7_0xgll")
flip_h = true

[node name="HurtBox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="HurtBox"]
shape = SubResource("RectangleShape2D_ab18d")
debug_color = Color(1, 0.0117647, 0.0313726, 0.419608)

[node name="SpeedUpTimer" type="Timer" parent="."]
unique_name_in_owner = true

[node name="ShootTimer" type="Timer" parent="."]
unique_name_in_owner = true
